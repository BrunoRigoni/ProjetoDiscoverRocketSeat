* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
:root {
  --text-color: white;
  --bg-url: url(./assets/bg-mobile.jpg);
  --stroke-color: rgba(255, 255, 255, 0.5);
  --surface-color: rgba(255, 255, 255, 0.05);
  --surface-color-hover: rgba(0, 0, 0, 0.02);
  --highlight-color: rgba(255, 255, 255, 0.2);
  --switch-bg-url: url(./assets/assets/moon-stars.svg);
}
.light {
  --text-color: black;
  --bg-url: url(./assets/bg-mobile-light.jpg);
  --stroke-color: rgba(0, 0, 0, 0.5);
  --surface-color: rgba(0, 0, 0, 0.05);
  --surface-color-hover: rgba(0, 0, 0, 0.02);
  --highlight-color: rgba(0, 0, 0, 0.1);
  --switch-bg-url: url(./assets/assets/sun.svg);
}

body {
  /*
  background-image: url(./assets/bg-mobile.jpg);
  background-repeat: no-repeat;
  background-position: top center;
  background-size: cover;
  */
  /*background: color image repeat position/siza*/
  background: var(--bg-url) no-repeat top center/cover;
  /*tudo pode ser escrito de forma comprimida (na mesma linha)*/
  height: 100vh;
}
/* body* = seletor universal, vai aplicar para todos os elementos dentro do body*/
body * {
  font-family: "Inter", sans-serif;
  color: var(--text-color);
}
#container {
  width: 100%;
  max-width: 588px;
  /* margin-left: auto;
  margin-right: auto;
  podem ser descritos automaticamente como margin:auto*/
  margin: 56px auto 0px;
  padding: 0 24px;
}
/*PROFILE*/
#profile {
  text-align: center;
  padding: 24px;
}
#profile img {
  display: block;
  width: 112px;
  margin: auto;
}
/*existem regras ocultas no css, por exemolo display:none, que vai sumir com qualquer propriedade descrita*/
/*Elementos inline não é possivel aplicar margin:auto.
Para poder aplicar o comando, primeiro é necessário transformar o elemento em block, por exemplo adicionar a tag display: inline-block;*/
/* ou alina diretamente com a #profile {
  text-align:center;}*/
#profile p {
  font-weight: 500;
  line-height: 24px;
  margin-top: 8px;
}
/*switch*/
#switch {
  position: relative;
  width: 64px;
  margin: 0 auto;
  padding: 4px auto;
}

#switch button {
  width: 32px;
  height: 32px;
  background: white var(--switch-bg-url) no-repeat center;
  border: 0;
  border-radius: 50%;
  top: 50%;
  left: 0;
  position: absolute;
  z-index: 1;
  transform: translateY(-50%);
  animation: slide-back 0.2s;
}
#switch span {
  display: block;
  width: 64px;
  height: 24px;
  background: var(--surface-color);
  border: 1px solid var(--stroke-color);
  border-radius: 9999px;
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
}
.light #switch button {
  animation: slide-in 0.4s forwards;
}
#switch button:hover {
  outline: 8px solid var(--highlight-color);
}

/*links - lista de links*/
ul {
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 16px;
  padding: 24px 0;
}
ul li a {
  display: flex;
  justify-content: center;
  align-items: center;

  padding: 16px 24px;

  background: var(--surface-color);
  border: 1px solid var(--stroke-color);
  border-radius: 8px;

  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);

  text-decoration: none;
  font-weight: 500;
  transition: background 0.2s;
}

/*display flex ou block serve para  alterar a propriedade dos elementos dentro da caixa
flex é de flexivel, ou seja, ele tenta se adaptar dentro das medidas determinadas
essas propriedades podem ser alteradas com comandos de flex direction
display: block + text align: center; também funciona para alinhar textos
/*existem propriedades que só fazem sentido serem usadas quando tiver o flex */

ul li a:hover {
  background: var(--surface-color-hover);
  border: 1.5px solid var(--text-color);
}
/*pseudo-selector
ul li a:hover, só funciona se passar o mouse em cima */

/*social links*/
#social-links {
  display: flex;
  padding: 24px 0;
  font-size: 24px;
  justify-content: center;
}
#social-links a {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 16px;
  transition: background 0.2s;
  border-radius: 50%;
}
/*display:flex - para alinhar lado a lado todos os icones
e poder possibilitar o comando gap, para definir um espaço entre eles*/
#social-links a:hover {
  background: var(--highlight-color);
  padding: 16px;
}
footer {
  font-size: 14px;
  display: flex;
  justify-content: center;
  padding: 24px 0;
}

/*Media queries*/
/*tudo que inicia com @ no CSS é chamado de at rule*/
@media (min-width: 700px) {
  :root {
    --bg-url: url(./assets/Background.jpg);
  }
  .light {
    --bg-url: url(./assets/Background-light.jpg);
  }
}
/*at rules de animação*/
@keyframes slide-in {
  from {
    left: 0;
  }
  to {
    left: 50%;
  }
}

@keyframes slide-back {
  from {
    left: 50%;
  }

  to {
    left: 0;
  }
}
